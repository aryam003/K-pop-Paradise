# Example settings for email (configure as needed)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.example.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'your_email@example.com'
EMAIL_HOST_PASSWORD = 'your_email_password'
DEFAULT_FROM_EMAIL = 'your_email@example.com'


from django.core.mail import send_mail
from django.conf import settings
from django.contrib import messages
from django.shortcuts import redirect, render
from .models import Ticket, Concert
from django.utils.html import strip_tags

def book_ticket(request, concert_id):
    concert = Concert.objects.get(id=concert_id)
    if request.method == "POST":
        buyer_name = request.POST.get("name")
        email = request.POST.get("email")
        quantity = int(request.POST.get("quantity")) 
        total_price = concert.price * quantity

        # Create the ticket record
        ticket = Ticket.objects.create(
            concert=concert, 
            buyer_name=buyer_name, 
            email=email, 
            quantity=quantity,
            total_price=total_price
        )

        # Send booking confirmation email to the user
        subject = f"Your Ticket Booking for {concert.name}"
        message = f"""
        Hi {buyer_name},

        Thank you for booking your ticket(s) for the concert '{concert.name}'.

        Details:
        Concert: {concert.name}
        Quantity: {quantity}
        Total Price: ${total_price:.2f}
        Booking Confirmation: Your ticket(s) are confirmed and will be sent to you soon.

        Best regards,
        The Concert Team
        """
        
        send_mail(
            subject,
            message,
            settings.DEFAULT_FROM_EMAIL,
            [email],
            fail_silently=False,
        )

        # Success message for the user
        messages.success(request, f"Ticket booked successfully! Total price: {total_price:.2f}")
        return redirect(user_home)

    return render(request, 'user/book_ticket.html', {'concert': concert})



Optional HTML Email
If you want to send HTML-formatted emails (e.g., for better styling), you can use send_mail with html_message:

python
Copy
html_message = """
<html>
  <body>
    <h2>Booking Confirmation</h2>
    <p>Hi {buyer_name},</p>
    <p>Thank you for booking your ticket(s) for the concert '<strong>{concert.name}</strong>'.</p>
    <p><strong>Details:</strong></p>
    <ul>
        <li>Concert: {concert.name}</li>
        <li>Quantity: {quantity}</li>
        <li>Total Price: ${total_price:.2f}</li>
    </ul>
    <p>Your ticket(s) are confirmed and will be sent to you soon.</p>
    <p>Best regards,<br>The Concert Team</p>
  </body>
</html>
"""

send_mail(
    subject,
    strip_tags(html_message),  # strip_tags removes HTML tags for text-only emails
    settings.DEFAULT_FROM_EMAIL,
    [email],
    html_message=html_message,
    fail_silently=False,
)
          